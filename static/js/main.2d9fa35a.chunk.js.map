{"version":3,"sources":["images/City.png","images/CodingBanner.png","images/AlienWebsite.png","images/AppGithub.png","images/CosmicSpikes.png","images/Graduation.jpg","images/Towel.png","images/Donut.png","images/CraterLakeGame.png","components/Social.jsx","components/Header.jsx","components/Banner.jsx","components/Cards.jsx","components/About.jsx","components/Renders.jsx","components/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Social","className","href","Header","Banner","src","CodingBanner","alt","Cards","AlienWebsite","AppGithub","CosmicSpikes","About","Graduation","Renders","state","count","currentImage","City","images","CraterLakeGame","Donut","Towel","handleClick","e","target","id","setState","this","onClick","Component","Footer","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,0C,gBCA3CD,EAAOC,QAAU,IAA0B,wC,kBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,4C,mJCY5BC,G,YAVA,WACX,OACI,yBAAKC,UAAU,UACX,uBAAGC,KAAK,0DAA0D,uBAAGD,UAAU,oBAC/E,uBAAGC,KAAK,oCAAmC,uBAAGD,UAAU,kBACxD,uBAAGC,KAAK,+EAA8E,uBAAGD,UAAU,sBCKhGE,EAVA,WACX,OACI,yBAAKF,UAAU,UACX,2CACA,4F,gBCMGG,EATA,WACX,OACI,yBAAKH,UAAU,UACX,yBAAKI,IAAKC,IAAcC,IAAI,a,gDCuCzBC,EAvCD,WACV,OACI,yBAAKP,UAAU,SACX,yBAAKA,UAAU,QACX,6BACI,yCACA,+DACA,uBAAGC,KAAK,4CAA2C,uBAAGD,UAAU,aAAhE,kBAEJ,6BACI,yBAAKI,IAAKI,IAAcF,IAAI,eAIpC,yBAAKN,UAAU,QACX,6BACI,2CACA,uEACA,uBAAGC,KAAK,qDAAoD,uBAAGD,UAAU,aAAzE,kBAEJ,6BACI,yBAAKI,IAAKK,IAAWH,IAAI,0BAIjC,yBAAKN,UAAU,QACX,6BACI,4CACA,wDACA,uBAAGC,KAAK,6EAA4E,uBAAGD,UAAU,aAAjG,kBAEJ,6BACI,yBAAKI,IAAKM,IAAcJ,IAAI,sB,gBChBjCK,EAnBD,WACV,OACI,yBAAKX,UAAU,SACX,yBAAKI,IAAKQ,IAAYN,IAAI,gBAC1B,6BACI,wCACA,qV,0GCiDDO,E,4MAlDXC,MAAQ,CACJC,MAAO,EACPC,aAAcC,IACdC,OAAQ,CACJD,IACAE,IACAC,IACAC,M,EAIRC,YAAc,SAACC,GACX,IAAIR,EAAQ,EAAKD,MAAMC,MACJ,UAAhBQ,EAAEC,OAAOC,GACRV,IAGAA,IAGDA,EAAQ,EACPA,EAAQ,EAEJA,EAAQ,IACZA,EAAQ,GAGZ,EAAKW,SAAL,2BACO,EAAKZ,OADZ,IAEIC,MAAOA,EACPC,aAAc,EAAKF,MAAMI,OAAOH,O,uDAKpC,OACI,yBAAKf,UAAU,WACX,0CACA,yBAAKA,UAAU,eACX,yBAAKI,IAAKuB,KAAKb,MAAME,aAAcV,IAAI,uBACvC,yBAAKsB,QAASD,KAAKL,YAAaG,GAAG,OAAOzB,UAAU,gCACpD,yBAAK4B,QAASD,KAAKL,YAAaG,GAAG,QAAQzB,UAAU,wC,GA3CnD6B,aCIPC,EARA,WACX,OACI,yBAAK9B,UAAU,UACX,uBAAGC,KAAK,QAAO,uBAAGD,UAAU,mBAA5B,gBC0BG+B,EArBF,WACT,OACE,6BACE,gCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAGF,8BACE,iCAAS,kBAAC,EAAD,OACT,+BACE,kBAAC,EAAD,MACA,kBAAC,EAAD,QAGJ,gCAAQ,kBAAC,EAAD,SCdIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.2d9fa35a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/City.1f2b1583.png\";","module.exports = __webpack_public_path__ + \"static/media/CodingBanner.926711a5.png\";","module.exports = __webpack_public_path__ + \"static/media/AlienWebsite.9120a600.png\";","module.exports = __webpack_public_path__ + \"static/media/AppGithub.8e6769b7.png\";","module.exports = __webpack_public_path__ + \"static/media/CosmicSpikes.5a05ef40.png\";","module.exports = __webpack_public_path__ + \"static/media/Graduation.cf3996e7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Towel.1fcb9eae.png\";","module.exports = __webpack_public_path__ + \"static/media/Donut.c8b8f909.png\";","module.exports = __webpack_public_path__ + \"static/media/CraterLakeGame.26d987a5.png\";","import React from 'react'\r\n\r\nconst Social = () => {\r\n    return (\r\n        <div className=\"social\">\r\n            <a href=\"https://www.linkedin.com/in/francis-dickson-6b1511126/\" ><i className=\"fa fa-linkedin\"></i></a>\r\n            <a href=\"https://github.com/iandickson222\"><i className=\"fa fa-github\"></i></a>\r\n            <a href=\"https://www.youtube.com/channel/UCSjSNddilSkyK9hPGDtE5Pg?view_as=subscriber\"><i className=\"fa fa-youtube\"></i></a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Social","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>Tech Thread</h1>\r\n            <p>My personal collection of 3D models, apps, games, and more.</p>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Header","import React from 'react'\r\nimport CodingBanner from '../images/CodingBanner.png'\r\n\r\nconst Banner = () => {\r\n    return (\r\n        <div className='banner'>\r\n            <img src={CodingBanner} alt=\"Banner\"/>\r\n        </div>     \r\n    )\r\n    \r\n}\r\n\r\nexport default Banner","import React from 'react'\r\nimport AlienWebsite from '../images/AlienWebsite.png'\r\nimport AppGithub from '../images/AppGithub.png'\r\nimport CosmicSpikes from '../images/CosmicSpikes.png'\r\n\r\n\r\nconst Cards = () => {\r\n    return (\r\n        <div className='cards'>\r\n            <div className=\"card\">\r\n                <div>\r\n                    <h1>3D MODELS</h1>\r\n                    <p>Check out a few of my 3D models!</p>\r\n                    <a href=\"https://www.artstation.com/iandickson222\"><i className=\"fa fa-th\"></i>View My Works</a>\r\n                </div>\r\n                <div>\r\n                    <img src={AlienWebsite} alt=\"3D Alien\"/>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"card\">\r\n                <div>\r\n                    <h1>GITHUB APPS</h1>\r\n                    <p>Check out my growing collection of apps!</p>\r\n                    <a href=\"https://github.com/iandickson222?tab=repositories\"><i className=\"fa fa-th\"></i>View My Works</a>\r\n                </div>\r\n                <div>\r\n                    <img src={AppGithub} alt=\"Excel Optimizer App\"/>\r\n                </div>\r\n            </div>\r\n            \r\n            <div className=\"card\">\r\n                <div>\r\n                    <h1>MOBILE GAMES</h1>\r\n                    <p>Check out my new release!</p>\r\n                    <a href=\"https://play.google.com/store/apps/details?id=com.IanDickson.CosmicSpikes\"><i className=\"fa fa-th\"></i>View My Works</a>\r\n                </div>\r\n                <div>\r\n                    <img src={CosmicSpikes} alt=\"Cosmic Spikes\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards","import React from 'react'\r\nimport Graduation from '../images/Graduation.jpg'\r\n\r\nconst About = () => {\r\n    return (\r\n        <div className='about'>\r\n            <img src={Graduation} alt=\"Fiber Optic\"/>\r\n            <div>\r\n                <h2>About Me</h2>\r\n                <p> \r\n                    My name is Ian Dickson. \r\n                    I am an engineer, a developer, a graphic designer, and much more. \r\n                    I enjoy taking on my own personal projects when I am not helping others to complete theirs. \r\n                    This site is a side project of mine to help me develop my web skills.\r\n                    Also, make sure to check out my new game Cosmic Spikes! \r\n                </p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About","import React, {Component} from 'react'\r\nimport Towel from '../images/Towel.png'\r\nimport Donut from '../images/Donut.png'\r\nimport CraterLakeGame from '../images/CraterLakeGame.png'\r\nimport City from '../images/City.png'\r\n\r\nclass Renders extends Component{\r\n\r\n    state = {\r\n        count: 0,\r\n        currentImage: City,\r\n        images: [\r\n            City,\r\n            CraterLakeGame,\r\n            Donut,\r\n            Towel\r\n        ]\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        var count = this.state.count;\r\n        if(e.target.id === 'right'){\r\n            count++;\r\n        }\r\n        else{\r\n            count--;\r\n        }\r\n\r\n        if(count > 3){\r\n            count = 0;\r\n        }\r\n        else if(count < 0){\r\n            count = 3;\r\n        }\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            count: count,\r\n            currentImage: this.state.images[count]\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className='renders'>\r\n                <h2>3D Renders</h2>\r\n                <div className=\"image-swipe\"> \r\n                    <img src={this.state.currentImage} alt=\"Crater Lake Render\"/>\r\n                    <div onClick={this.handleClick} id='left' className='fa fa-arrow-left arrow left'></div>\r\n                    <div onClick={this.handleClick} id='right' className='fa fa-arrow-right arrow right'></div>\r\n                </div>\r\n                \r\n                \r\n            </div>      \r\n        )\r\n    }   \r\n}\r\n\r\nexport default Renders","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className='footer'>\r\n            <a href=\"#top\"><i className=\"fa fa-arrow-up\"></i>To the top</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport './App.css';\r\nimport Social from './components/Social'\r\nimport Header from './components/Header'\r\nimport Banner from './components/Banner'\r\nimport Cards from './components/Cards'\r\nimport About from './components/About'\r\nimport Renders from './components/Renders'\r\nimport Footer from './components/Footer'\r\n\r\nconst App  = () => {\r\n    return (\r\n      <div>\r\n        <header>\r\n          <Social/>\r\n          <Header/>\r\n          <Banner/>\r\n        </header>\r\n        \r\n        <main>\r\n          <summary><Cards/></summary>\r\n          <aside>\r\n            <About/>\r\n            <Renders/>\r\n          </aside>\r\n        </main>\r\n        <footer><Footer/></footer> \r\n      </div>\r\n    );\r\n  } \r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}